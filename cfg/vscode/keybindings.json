// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "alt+left",
        "command": "-workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+right",
        "command": "-workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
    "key": "alt+up",
        "command": "workbench.action.navigateBack"
    },
    {
        "key": "ctrl+alt+-",
        "command": "-workbench.action.navigateBack"
    },
    {
    "key": "alt+down",
        "command": "workbench.action.navigateForward"
    },
    {
        "key": "ctrl+shift+-",
        "command": "-workbench.action.navigateForward"
    },
    {
        "key": "ctrl+shift+c",
        "command": "-workbench.action.terminal.openNativeConsole",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+shift+c",
        "command": "-workbench.action.terminal.copySelection",
        "when": "terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected"
    },
    {
        "key": "ctrl+shift+alt+c",
        "command": "-copyRelativeFilePath",
        "when": "!editorFocus"
    },
    {
        "key": "alt+c",
        "command": "-toggleSearchEditorCaseSensitive",
        "when": "inSearchEditor && searchInputBoxFocus"
    },
    {
        "key": "alt+c",
        "command": "-toggleFindCaseSensitive",
        "when": "editorFocus"
    },
    {
        "key": "alt+c",
        "command": "-toggleSearchCaseSensitive",
        "when": "searchViewletFocus"
    },
    {
        "key": "alt+c",
        "command": "-workbench.action.terminal.toggleFindCaseSensitive",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+r",
        "command": "-toggleSearchEditorRegex",
        "when": "inSearchEditor && searchInputBoxFocus"
    },
    {
        "key": "alt+r",
        "command": "-workbench.action.terminal.toggleFindRegex",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+r",
        "command": "-toggleFindRegex",
        "when": "editorFocus"
    },
    {
        "key": "alt+r",
        "command": "-toggleSearchRegex",
        "when": "searchViewletFocus"
    },
    {
    "key": "alt+w",
        "command": "workbench.files.action.showActiveFileInExplorer"
    },
    {
        "key": "f1",
        "command": "-workbench.action.showCommands"
    },
    {
        "key": "ctrl+p",
        "command": "workbench.action.quickOpen",
        "when": "!vim.active || vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+d",
        "command": "-editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+alt+down",
        "command": "-editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+alt+w",
        "command": "workbench.action.closeOtherEditors"
    },
    {
        "key": "ctrl+alt+v",
        "command": "workbench.action.splitEditorRight"
    },
    {
        "key": "ctrl+alt+h",
        "command": "workbench.action.splitEditorDown"
    },
    {
        "key": "ctrl+shift+k",
        "command": "-editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+enter",
        "command": "editor.action.openLink",
        "when": "editorTextFocus && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+shift+e",
    "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "ctrl+shift+e",
    "command": "-workbench.view.explorer",
    "when": "viewContainer.workbench.view.explorer.enabled"
  },
  {
    "key": "ctrl+shift+e",
    "command": "eslint.executeAutofix"
  },
  {
    "key": "ctrl+shift+0",
    "command": "editor.emmet.action.matchTag"
  },
  {
    "key": "alt+c",
    "command": "-gitlens.showQuickCommitFileDetails",
    "when": "editorTextFocus && !gitlens:disabled && config.gitlens.keymap == 'alternate'"
  },
  {
    "key": "ctrl+shift+c",
    "command": "gitlens.diffWithRevisionFrom"
  },
  {
    "key": "alt+w",
    "command": "-toggleSearchEditorWholeWord",
    "when": "inSearchEditor && searchInputBoxFocus"
  },
  {
    "key": "alt+w",
    "command": "-workbench.action.terminal.toggleFindWholeWord",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+w",
    "command": "-toggleFindWholeWord",
    "when": "editorFocus"
  },
  {
    "key": "alt+w",
    "command": "-toggleSearchWholeWord",
    "when": "searchViewletFocus"
  },
  {
    "key": "alt+q",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+shift+f8",
    "command": "typescript.findAllFileReferences"
  },
  {
    "key": "ctrl+shift+d",
    "command": "-workbench.view.debug",
    "when": "viewContainer.workbench.view.debug.enabled"
  },
  {
    "key": "ctrl+shift+up",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+up",
    "command": "-editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+up",
    "command": "-notebook.cell.moveUp",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "ctrl+shift+up",
    "command": "-editor.action.insertCursorAbove",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+down",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+down",
    "command": "-editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+down",
    "command": "-editor.action.insertCursorBelow",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+up",
    "command": "gitlens.key.alt+left",
    "when": "gitlens:key:alt+left"
  },
  {
    "key": "alt+left",
    "command": "-gitlens.key.alt+left",
    "when": "gitlens:key:alt+left"
  },
  {
    "key": "alt+left",
    "command": "workbench.action.focusLeftGroup"
  },
  {
    "key": "alt+right",
    "command": "workbench.action.focusRightGroup"
  },
  {
    "key": "alt+right",
    "command": "-gitlens.key.alt+right",
    "when": "gitlens:key:alt+right"
  },
  {
    "key": "alt+x",
    "command": "workbench.action.closeActiveEditor"
  },
  {
    "key": "alt+e",
    "command": "workbench.action.previousEditorInGroup"
  },
  {
    "key": "alt+f",
    "command": "workbench.action.nextEditorInGroup"
  },
  {
    "key": "shift+alt+f",
    "command": "-filesExplorer.findInFolder",
    "when": "explorerResourceIsFolder && filesExplorerFocus && foldersViewVisible && !inputFocus"
  },
  {
    "key": "shift+alt+f",
    "command": "-search.action.restrictSearchToFolder",
    "when": "folderMatchWithResourceFocus && searchViewletVisible"
  },
  {
    "key": "shift+alt+f",
    "command": "workbench.action.previousEditorInGroup"
  },
  {
    "key": "alt+c",
    "command": "copyRelativeFilePath",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+shift+d",
    "command": "extension.vim_ctrl+u",
    "when": "editorTextFocus && vim.active && vim.use<C-u> && !inDebugRepl"
  },
  {
    "key": "ctrl+x",
    "command": "-extension.vim_ctrl+x",
    "when": "editorTextFocus && vim.active && vim.use<C-x> && !inDebugRepl"
  },
  {
    "key": "alt+n",
    "command": "workbench.action.files.newUntitledFile"
  },
  {
    "key": "f8",
    "command": "-editor.action.marker.nextInFiles",
    "when": "editorFocus"
  },
  {
    "key": "f8",
    "command": "go-to-next-error.next.error"
  },
  {
    "key": "ctrl+e",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "ctrl+w",
    "command": "-extension.vim_ctrl+w",
    "when": "editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl"
  },
  {
    "key": "alt+1",
    "command": "-workbench.action.openEditorAtIndex1"
  },
  {
    "key": "alt+2",
    "command": "-workbench.action.openEditorAtIndex2"
  },
  {
    "key": "alt+3",
    "command": "-workbench.action.openEditorAtIndex3"
  },
  {
    "key": "alt+4",
    "command": "-workbench.action.openEditorAtIndex4"
  },
  {
    "key": "alt+5",
    "command": "-workbench.action.openEditorAtIndex5"
  },
  {
    "key": "alt+6",
    "command": "-workbench.action.openEditorAtIndex6"
  },
  {
    "key": "alt+7",
    "command": "-workbench.action.openEditorAtIndex7"
  },
  {
    "key": "alt+8",
    "command": "-workbench.action.openEditorAtIndex8"
  },
  {
    "key": "alt+9",
    "command": "-workbench.action.openEditorAtIndex9"
  },
  {
    "key": "alt+1",
    "command": "workbench.explorer.fileView.focus"
  },
  {
    "key": "alt+2",
    "command": "outline.focus"
  },
  {
    "key": "ctrl+shift+alt+f",
    "command": "search.action.focusSearchList"
  },
  // scroll in hover
  {
    "key": "h",
    "command": "editor.action.scrollLeftHover",
    "when": "vim.mode && editorHoverFocused"
  },
  {
    "key": "j",
    "command": "editor.action.scrollDownHover",
    "when": "vim.mode && editorHoverFocused"
  },
  {
    "key": "k",
    "command": "editor.action.scrollUpHover",
    "when": "vim.mode && editorHoverFocused"
  },
  {
    "key": "l",
    "command": "editor.action.scrollRightHover",
    "when": "vim.mode && editorHoverFocused"
  },
  {
    "key": "ctrl+down",
    "command": "-widgetNavigation.focusNext",
    "when": "inputFocus && navigableContainerFocused || navigableContainerFocused && treestickyScrollFocused || navigableContainerFocused && !listFocus || navigableContainerFocused && listScrollAtBoundary == 'both' || navigableContainerFocused && listScrollAtBoundary == 'bottom'"
  },
  // peek widget: switch occurences/code
  {
    "key": "alt+right",
    "command": "togglePeekWidgetFocus",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "key": "alt+left",
    "command": "togglePeekWidgetFocus",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "key": "ctrl+shift+r",
    "command": "-solargraph.search"
  },
  {
    "key": "alt+z",
    "command": "-workbench.action.terminal.sizeToContentWidth",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen || terminalFocus && terminalIsOpen && terminalProcessSupported"
  },
  {
    "key": "alt+z",
    "command": "-editor.action.toggleWordWrap"
  },
  {
    "key": "alt+z",
    "command": "runCommands",
    "args": {
      "commands": [
        "workbench.action.focusActiveEditorGroup",
        "workbench.action.closePanel"
      ]
    }
  },
]
