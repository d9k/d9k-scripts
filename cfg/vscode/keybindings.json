// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "alt+left",
        "command": "-workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+right",
        "command": "-workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
    "key": "alt+up",
        "command": "workbench.action.navigateBack"
    },
    {
        "key": "ctrl+alt+-",
        "command": "-workbench.action.navigateBack"
    },
    {
    "key": "alt+down",
        "command": "workbench.action.navigateForward"
    },
    {
        "key": "ctrl+shift+-",
        "command": "-workbench.action.navigateForward"
    },
    {
        "key": "ctrl+shift+c",
        "command": "-workbench.action.terminal.openNativeConsole",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+shift+c",
        "command": "-workbench.action.terminal.copySelection",
        "when": "terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected"
    },
    {
        "key": "ctrl+shift+alt+c",
        "command": "-copyRelativeFilePath",
        "when": "!editorFocus"
    },
    {
        "key": "alt+c",
        "command": "-toggleSearchEditorCaseSensitive",
        "when": "inSearchEditor && searchInputBoxFocus"
    },
    {
        "key": "alt+c",
        "command": "-toggleFindCaseSensitive",
        "when": "editorFocus"
    },
    {
        "key": "alt+c",
        "command": "-toggleSearchCaseSensitive",
        "when": "searchViewletFocus"
    },
    {
        "key": "alt+c",
        "command": "-workbench.action.terminal.toggleFindCaseSensitive",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+r",
        "command": "-toggleSearchEditorRegex",
        "when": "inSearchEditor && searchInputBoxFocus"
    },
    {
        "key": "alt+r",
        "command": "-workbench.action.terminal.toggleFindRegex",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+r",
        "command": "-toggleFindRegex",
        "when": "editorFocus"
    },
    {
        "key": "alt+r",
        "command": "-toggleSearchRegex",
        "when": "searchViewletFocus"
    },
    {
    "key": "alt+w",
        "command": "workbench.files.action.showActiveFileInExplorer"
    },
    {
        "key": "f1",
        "command": "-workbench.action.showCommands"
    },
    {
        "key": "ctrl+p",
    "command": "workbench.action.quickOpen"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+d",
        "command": "-editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+alt+down",
        "command": "-editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+alt+w",
        "command": "workbench.action.closeOtherEditors"
    },
    {
        "key": "ctrl+alt+v",
        "command": "workbench.action.splitEditorRight"
    },
    {
        "key": "ctrl+alt+h",
        "command": "workbench.action.splitEditorDown"
    },
    {
        "key": "ctrl+shift+k",
        "command": "-editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+enter",
        "command": "editor.action.openLink",
        "when": "editorTextFocus && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+shift+e",
    "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "ctrl+shift+e",
    "command": "-workbench.view.explorer",
    "when": "viewContainer.workbench.view.explorer.enabled"
  },
  {
    "key": "ctrl+shift+e",
    "command": "eslint.executeAutofix"
  },
  {
    "key": "ctrl+shift+0",
    "command": "editor.emmet.action.matchTag"
  },
  {
    "key": "alt+c",
    "command": "-gitlens.showQuickCommitFileDetails",
    "when": "editorTextFocus && !gitlens:disabled && config.gitlens.keymap == 'alternate'"
  },
  {
    "key": "ctrl+shift+c",
    "command": "gitlens.diffWithRevisionFrom"
  },
  {
    "key": "alt+w",
    "command": "-toggleSearchEditorWholeWord",
    "when": "inSearchEditor && searchInputBoxFocus"
  },
  {
    "key": "alt+w",
    "command": "-workbench.action.terminal.toggleFindWholeWord",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+w",
    "command": "-toggleFindWholeWord",
    "when": "editorFocus"
  },
  {
    "key": "alt+w",
    "command": "-toggleSearchWholeWord",
    "when": "searchViewletFocus"
  },
  {
    "key": "alt+q",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+shift+f8",
    "command": "typescript.findAllFileReferences"
  },
  {
    "key": "ctrl+shift+d",
    "command": "-workbench.view.debug",
    "when": "viewContainer.workbench.view.debug.enabled"
  },
  {
    "key": "ctrl+shift+up",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+up",
    "command": "-editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+up",
    "command": "-notebook.cell.moveUp",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "ctrl+shift+up",
    "command": "-editor.action.insertCursorAbove",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+down",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+down",
    "command": "-editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+down",
    "command": "-editor.action.insertCursorBelow",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+up",
    "command": "gitlens.key.alt+left",
    "when": "gitlens:key:alt+left"
  },
  {
    "key": "alt+left",
    "command": "-gitlens.key.alt+left",
    "when": "gitlens:key:alt+left"
  },
  {
    "key": "alt+left",
    "command": "workbench.action.focusLeftGroup"
  },
  {
    "key": "alt+right",
    "command": "workbench.action.focusRightGroup"
  },
  {
    "key": "alt+right",
    "command": "-gitlens.key.alt+right",
    "when": "gitlens:key:alt+right"
  },
  {
    "key": "alt+x",
    "command": "workbench.action.closeActiveEditor"
  },
  {
    "key": "alt+r",
    "command": "workbench.action.previousEditorInGroup"
  },
  {
    "key": "alt+f",
    "command": "workbench.action.nextEditorInGroup"
  },
  {
    "key": "shift+alt+f",
    "command": "-filesExplorer.findInFolder",
    "when": "explorerResourceIsFolder && filesExplorerFocus && foldersViewVisible && !inputFocus"
  },
  {
    "key": "shift+alt+f",
    "command": "-search.action.restrictSearchToFolder",
    "when": "folderMatchWithResourceFocus && searchViewletVisible"
  },
  {
    "key": "shift+alt+f",
    "command": "workbench.action.previousEditorInGroup"
  },
  {
    "key": "alt+c",
    "command": "copyRelativeFilePath",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+shift+d",
    "command": "extension.vim_ctrl+u",
    "when": "editorTextFocus && vim.active && vim.use<C-u> && !inDebugRepl"
  },
  {
    "key": "ctrl+x",
    "command": "-extension.vim_ctrl+x",
    "when": "editorTextFocus && vim.active && vim.use<C-x> && !inDebugRepl"
  },
  {
    "key": "alt+n",
    "command": "workbench.action.files.newUntitledFile"
  },
  {
    "key": "f8",
    "command": "-editor.action.marker.nextInFiles",
    "when": "editorFocus"
  },
  {
    "key": "f8",
    "command": "go-to-next-error.next.error"
  },
  {
    "key": "ctrl+e",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "ctrl+w",
    "command": "-extension.vim_ctrl+w",
    "when": "editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl"
  },
  {
    "key": "alt+1",
    "command": "-workbench.action.openEditorAtIndex1"
  },
  {
    "key": "alt+2",
    "command": "-workbench.action.openEditorAtIndex2"
  },
  {
    "key": "alt+3",
    "command": "-workbench.action.openEditorAtIndex3"
  },
  {
    "key": "alt+4",
    "command": "-workbench.action.openEditorAtIndex4"
  },
  {
    "key": "alt+5",
    "command": "-workbench.action.openEditorAtIndex5"
  },
  {
    "key": "alt+6",
    "command": "-workbench.action.openEditorAtIndex6"
  },
  {
    "key": "alt+7",
    "command": "-workbench.action.openEditorAtIndex7"
  },
  {
    "key": "alt+8",
    "command": "-workbench.action.openEditorAtIndex8"
  },
  {
    "key": "alt+9",
    "command": "-workbench.action.openEditorAtIndex9"
  },
  {
    "key": "alt+1",
    "command": "workbench.explorer.fileView.focus"
  },
  {
    "key": "alt+2",
    "command": "outline.focus"
  },
  {
    "key": "ctrl+shift+alt+f",
    "command": "search.action.focusSearchList"
  },
  // scroll in hover
  {
    "key": "h",
    "command": "editor.action.scrollLeftHover",
    "when": "vim.mode && editorHoverFocused"
  },
  {
    "key": "j",
    "command": "editor.action.scrollDownHover",
    "when": "vim.mode && editorHoverFocused"
  },
  {
    "key": "k",
    "command": "editor.action.scrollUpHover",
    "when": "vim.mode && editorHoverFocused"
  },
  {
    "key": "l",
    "command": "editor.action.scrollRightHover",
    "when": "vim.mode && editorHoverFocused"
  },
  {
    "key": "ctrl+down",
    "command": "-widgetNavigation.focusNext",
    "when": "inputFocus && navigableContainerFocused || navigableContainerFocused && treestickyScrollFocused || navigableContainerFocused && !listFocus || navigableContainerFocused && listScrollAtBoundary == 'both' || navigableContainerFocused && listScrollAtBoundary == 'bottom'"
  },
  // peek widget: switch occurences/code
  {
    "key": "alt+right",
    "command": "togglePeekWidgetFocus",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "key": "alt+left",
    "command": "togglePeekWidgetFocus",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "key": "ctrl+shift+r",
    "command": "-solargraph.search"
  },
  {
    "key": "alt+z",
    "command": "-workbench.action.terminal.sizeToContentWidth",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen || terminalFocus && terminalIsOpen && terminalProcessSupported"
  },
  {
    "key": "alt+z",
    "command": "-editor.action.toggleWordWrap"
  },
  {
    "key": "alt+z",
    "command": "runCommands",
    "args": {
      "commands": [
        "workbench.action.focusActiveEditorGroup",
        "workbench.action.closePanel"
      ]
    }
  },
  {
    "key": "alt+r",
    "command": "-workbench.action.terminal.toggleFindRegex",
    "when": "terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported"
  },
  {
    "key": "alt+d",
    "command": "extension.vim_ctrl+d",
    "when": "editorTextFocus && vim.active && vim.use<C-d> && !inDebugRepl"
  },
  {
    "key": "alt+e",
    "command": "extension.vim_ctrl+u",
    "when": "editorTextFocus && vim.active && vim.use<C-u> && !inDebugRepl"
  },
  {
    "key": "ctrl+tab",
    "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
    "when": "!activeEditorGroupEmpty"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup",
    "when": "!activeEditorGroupEmpty"
  },
  {
    "key": "ctrl+tab",
    "command": "workbench.action.nextEditorInGroup"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.previousEditorInGroup"
  },
  {
    "key": "capslock",
    "command": "extension.vim_escape",
    "when": "editorTextFocus && vim.active && !inDebugRepl"
  },
  {
    "key": "escape",
    "command": "-extension.vim_escape",
    "when": "editorTextFocus && vim.active && !inDebugRepl"
  },
  {
    "key": "capslock",
    "command": "editor.action.cancelSelectionAnchor",
    "when": "editorTextFocus && selectionAnchorSet"
  },
  {
    "key": "escape",
    "command": "-editor.action.cancelSelectionAnchor",
    "when": "editorTextFocus && selectionAnchorSet"
  },
  {
    "key": "capslock",
    "command": "workbench.action.chat.stopListening",
    "when": "voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || voiceChatInProgress && scopedVoiceChatInProgress == 'terminal' || voiceChatInProgress && scopedVoiceChatInProgress == 'view'"
  },
  {
    "key": "escape",
    "command": "-workbench.action.chat.stopListening",
    "when": "voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || voiceChatInProgress && scopedVoiceChatInProgress == 'terminal' || voiceChatInProgress && scopedVoiceChatInProgress == 'view'"
  },
  {
    "key": "capslock",
    "command": "workbench.action.speech.stopReadAloud",
    "when": "scopedChatSynthesisInProgress && textToSpeechInProgress"
  },
  {
    "key": "escape",
    "command": "-workbench.action.speech.stopReadAloud",
    "when": "scopedChatSynthesisInProgress && textToSpeechInProgress"
  },
  {
    "key": "capslock",
    "command": "editor.debug.action.closeExceptionWidget",
    "when": "exceptionWidgetVisible"
  },
  {
    "key": "escape",
    "command": "-editor.debug.action.closeExceptionWidget",
    "when": "exceptionWidgetVisible"
  },
  {
    "key": "capslock",
    "command": "editor.action.inlineEdits.hide",
    "when": "inlineEditsVisible"
  },
  {
    "key": "escape",
    "command": "-editor.action.inlineEdits.hide",
    "when": "inlineEditsVisible"
  },
  {
    "key": "capslock",
    "command": "editor.action.inlineSuggest.hide",
    "when": "inlineSuggestionVisible"
  },
  {
    "key": "escape",
    "command": "-editor.action.inlineSuggest.hide",
    "when": "inlineSuggestionVisible"
  },
  {
    "key": "capslock",
    "command": "editor.action.hideColorPicker",
    "when": "standaloneColorPickerVisible"
  },
  {
    "key": "escape",
    "command": "-editor.action.hideColorPicker",
    "when": "standaloneColorPickerVisible"
  },
  {
    "key": "capslock",
    "command": "notebook.cell.quitEdit",
    "when": "inputFocus && notebookEditorFocused && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible && !inlineChatFocused"
  },
  {
    "key": "escape",
    "command": "-notebook.cell.quitEdit",
    "when": "inputFocus && notebookEditorFocused && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible && !inlineChatFocused"
  },
  {
    "key": "capslock",
    "command": "notebook.cell.quitEdit",
    "when": "notebookEditorFocused && notebookOutputFocused"
  },
  {
    "key": "escape",
    "command": "-notebook.cell.quitEdit",
    "when": "notebookEditorFocused && notebookOutputFocused"
  },
  {
    "key": "capslock",
    "command": "notebook.cell.quitEdit",
    "when": "inputFocus && notebookEditorFocused && vim.active && !editorHasSelection && !editorHoverVisible && vim.mode == 'Normal'"
  },
  {
    "key": "escape",
    "command": "-notebook.cell.quitEdit",
    "when": "inputFocus && notebookEditorFocused && vim.active && !editorHasSelection && !editorHoverVisible && vim.mode == 'Normal'"
  },
  {
    "key": "capslock",
    "command": "notifications.hideList",
    "when": "notificationCenterVisible"
  },
  {
    "key": "escape",
    "command": "-notifications.hideList",
    "when": "notificationCenterVisible"
  },
  {
    "key": "capslock",
    "command": "settings.action.clearSearchResults",
    "when": "inSettingsEditor && inSettingsSearch"
  },
  {
    "key": "escape",
    "command": "-settings.action.clearSearchResults",
    "when": "inSettingsEditor && inSettingsSearch"
  },
  {
    "key": "capslock",
    "command": "settings.action.focusLevelUp",
    "when": "inSettingsEditor && !inSettingsJSONEditor && !inSettingsSearch"
  },
  {
    "key": "escape",
    "command": "-settings.action.focusLevelUp",
    "when": "inSettingsEditor && !inSettingsJSONEditor && !inSettingsSearch"
  },
  {
    "key": "capslock",
    "command": "editor.action.inlineEdit.reject",
    "when": "inlineEditVisible && !editorReadonly"
  },
  {
    "key": "escape",
    "command": "-editor.action.inlineEdit.reject",
    "when": "inlineEditVisible && !editorReadonly"
  },
  {
    "key": "capslock",
    "command": "search.action.focusQueryEditorWidget",
    "when": "inSearchEditor"
  },
  {
    "key": "escape",
    "command": "-search.action.focusQueryEditorWidget",
    "when": "inSearchEditor"
  },
  {
    "key": "capslock",
    "command": "search.action.cancel",
    "when": "listFocus && searchViewletVisible && !inputFocus && !treestickyScrollFocused && searchState != '0'"
  },
  {
    "key": "escape",
    "command": "-search.action.cancel",
    "when": "listFocus && searchViewletVisible && !inputFocus && !treestickyScrollFocused && searchState != '0'"
  },
  {
    "key": "capslock",
    "command": "inlayHints.stopReadingLineWithHint",
    "when": "isReadingLineWithInlayHints"
  },
  {
    "key": "escape",
    "command": "-inlayHints.stopReadingLineWithHint",
    "when": "isReadingLineWithInlayHints"
  },
  {
    "key": "capslock",
    "command": "workbench.action.terminal.clearSelection",
    "when": "terminalFocusInAny && terminalHasBeenCreated && terminalTextSelected && !terminalFindVisible || terminalFocusInAny && terminalProcessSupported && terminalTextSelected && !terminalFindVisible"
  },
  {
    "key": "escape",
    "command": "-workbench.action.terminal.clearSelection",
    "when": "terminalFocusInAny && terminalHasBeenCreated && terminalTextSelected && !terminalFindVisible || terminalFocusInAny && terminalProcessSupported && terminalTextSelected && !terminalFindVisible"
  },
  {
    "key": "capslock",
    "command": "workbench.action.terminal.chat.close",
    "when": "terminalChatFocus && terminalChatVisible"
  },
  {
    "key": "shift+escape",
    "command": "-workbench.action.terminal.chat.close",
    "when": "terminalChatFocus && terminalChatVisible"
  },
  {
    "key": "capslock",
    "command": "workbench.action.terminal.hideFind",
    "when": "terminalFindVisible && terminalFocusInAny && terminalHasBeenCreated || terminalFindVisible && terminalFocusInAny && terminalProcessSupported"
  },
  {
    "key": "shift+escape",
    "command": "-workbench.action.terminal.hideFind",
    "when": "terminalFindVisible && terminalFocusInAny && terminalHasBeenCreated || terminalFindVisible && terminalFocusInAny && terminalProcessSupported"
  },
  {
    "key": "escape",
    "command": "-workbench.action.terminal.chat.close",
    "when": "terminalChatFocus && terminalChatVisible"
  },
  {
    "key": "escape",
    "command": "-workbench.action.terminal.hideFind",
    "when": "terminalFindVisible && terminalFocusInAny && terminalHasBeenCreated || terminalFindVisible && terminalFocusInAny && terminalProcessSupported"
  },
  {
    "key": "capslock",
    "command": "workbench.action.editorDictation.stop",
    "when": "editorDictation.inProgress"
  },
  {
    "key": "escape",
    "command": "-workbench.action.editorDictation.stop",
    "when": "editorDictation.inProgress"
  },
  {
    "key": "capslock",
    "command": "welcome.goBack",
    "when": "inWelcome && activeEditor == 'gettingStartedPage'"
  },
  {
    "key": "escape",
    "command": "-welcome.goBack",
    "when": "inWelcome && activeEditor == 'gettingStartedPage'"
  },
  {
    "key": "capslock",
    "command": "breadcrumbs.selectEditor",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "key": "escape",
    "command": "-breadcrumbs.selectEditor",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "key": "capslock",
    "command": "cancelLinkedEditingInput",
    "when": "LinkedEditingInputVisible && editorTextFocus"
  },
  {
    "key": "shift+escape",
    "command": "-cancelLinkedEditingInput",
    "when": "LinkedEditingInputVisible && editorTextFocus"
  },
  {
    "key": "capslock",
    "command": "cancelRenameInput",
    "when": "editorFocus && renameInputVisible"
  },
  {
    "key": "shift+escape",
    "command": "-cancelRenameInput",
    "when": "editorFocus && renameInputVisible"
  },
  {
    "key": "capslock",
    "command": "cancelSelection",
    "when": "editorHasSelection && textInputFocus"
  },
  {
    "key": "shift+escape",
    "command": "-cancelSelection",
    "when": "editorHasSelection && textInputFocus"
  },
  {
    "key": "capslock",
    "command": "closeBreakpointWidget",
    "when": "breakpointWidgetVisible && textInputFocus"
  },
  {
    "key": "shift+escape",
    "command": "-closeBreakpointWidget",
    "when": "breakpointWidgetVisible && textInputFocus"
  },
  {
    "key": "capslock",
    "command": "closeDirtyDiff",
    "when": "dirtyDiffVisible"
  },
  {
    "key": "shift+escape",
    "command": "-closeDirtyDiff",
    "when": "dirtyDiffVisible"
  },
  {
    "key": "capslock",
    "command": "closeFindWidget",
    "when": "editorFocus && findWidgetVisible && !isComposing"
  },
  {
    "key": "shift+escape",
    "command": "-closeFindWidget",
    "when": "editorFocus && findWidgetVisible && !isComposing"
  },
  {
    "key": "capslock",
    "command": "closeMarkersNavigation",
    "when": "editorFocus && markersNavigationVisible"
  },
  {
    "key": "shift+escape",
    "command": "-closeMarkersNavigation",
    "when": "editorFocus && markersNavigationVisible"
  },
  {
    "key": "capslock",
    "command": "closeParameterHints",
    "when": "editorFocus && parameterHintsVisible"
  },
  {
    "key": "shift+escape",
    "command": "-closeParameterHints",
    "when": "editorFocus && parameterHintsVisible"
  },
  {
    "key": "capslock",
    "command": "closeReferenceSearch",
    "when": "inReferenceSearchEditor && !config.editor.stablePeek"
  },
  {
    "key": "shift+escape",
    "command": "-closeReferenceSearch",
    "when": "inReferenceSearchEditor && !config.editor.stablePeek"
  },
  {
    "key": "capslock",
    "command": "closeReferenceSearch",
    "when": "editorTextFocus && referenceSearchVisible && !config.editor.stablePeek || referenceSearchVisible && !config.editor.stablePeek && !inputFocus"
  },
  {
    "key": "shift+escape",
    "command": "-closeReferenceSearch",
    "when": "editorTextFocus && referenceSearchVisible && !config.editor.stablePeek || referenceSearchVisible && !config.editor.stablePeek && !inputFocus"
  },
  {
    "key": "escape",
    "command": "-cancelLinkedEditingInput",
    "when": "LinkedEditingInputVisible && editorTextFocus"
  },
  {
    "key": "escape",
    "command": "-cancelRenameInput",
    "when": "editorFocus && renameInputVisible"
  },
  {
    "key": "escape",
    "command": "-cancelSelection",
    "when": "editorHasSelection && textInputFocus"
  },
  {
    "key": "escape",
    "command": "-closeBreakpointWidget",
    "when": "breakpointWidgetVisible && textInputFocus"
  },
  {
    "key": "escape",
    "command": "-closeDirtyDiff",
    "when": "dirtyDiffVisible"
  },
  {
    "key": "escape",
    "command": "-closeFindWidget",
    "when": "editorFocus && findWidgetVisible && !isComposing"
  },
  {
    "key": "escape",
    "command": "-closeMarkersNavigation",
    "when": "editorFocus && markersNavigationVisible"
  },
  {
    "key": "escape",
    "command": "-closeParameterHints",
    "when": "editorFocus && parameterHintsVisible"
  },
  {
    "key": "escape",
    "command": "-closeReferenceSearch",
    "when": "inReferenceSearchEditor && !config.editor.stablePeek"
  },
  {
    "key": "escape",
    "command": "-closeReferenceSearch",
    "when": "editorTextFocus && referenceSearchVisible && !config.editor.stablePeek || referenceSearchVisible && !config.editor.stablePeek && !inputFocus"
  },
  {
    "key": "capslock",
    "command": "closeReplaceInFilesWidget",
    "when": "replaceInputBoxFocus && searchViewletVisible"
  },
  {
    "key": "escape",
    "command": "-closeReplaceInFilesWidget",
    "when": "replaceInputBoxFocus && searchViewletVisible"
  },
  {
    "key": "capslock",
    "command": "commentsClearFilterText",
    "when": "commentsFilterFocus"
  },
  {
    "key": "escape",
    "command": "-commentsClearFilterText",
    "when": "commentsFilterFocus"
  },
  {
    "key": "capslock",
    "command": "diffEditor.exitCompareMove",
    "when": "comparingMovedCode"
  },
  {
    "key": "escape",
    "command": "-diffEditor.exitCompareMove",
    "when": "comparingMovedCode"
  },
  {
    "key": "capslock",
    "command": "editor.action.selectEditor",
    "when": "stickyScrollFocused"
  },
  {
    "key": "escape",
    "command": "-editor.action.selectEditor",
    "when": "stickyScrollFocused"
  },
  {
    "key": "capslock",
    "command": "editor.action.webvieweditor.hideFind",
    "when": "webviewFindWidgetVisible && !editorFocus && activeEditor == 'WebviewEditor'"
  },
  {
    "key": "escape",
    "command": "-editor.action.webvieweditor.hideFind",
    "when": "webviewFindWidgetVisible && !editorFocus && activeEditor == 'WebviewEditor'"
  },
  {
    "key": "capslock",
    "command": "editor.cancelOperation",
    "when": "cancellableOperation"
  },
  {
    "key": "escape",
    "command": "-editor.cancelOperation",
    "when": "cancellableOperation"
  },
  {
    "key": "capslock",
    "command": "editor.closeCallHierarchy",
    "when": "callHierarchyVisible && !config.editor.stablePeek"
  },
  {
    "key": "escape",
    "command": "-editor.closeCallHierarchy",
    "when": "callHierarchyVisible && !config.editor.stablePeek"
  },
  {
    "key": "capslock",
    "command": "editor.closeTestPeek",
    "when": "testing.isInPeek && !config.editor.stablePeek || testing.isPeekVisible && !config.editor.stablePeek"
  },
  {
    "key": "escape",
    "command": "-editor.closeTestPeek",
    "when": "testing.isInPeek && !config.editor.stablePeek || testing.isPeekVisible && !config.editor.stablePeek"
  },
  {
    "key": "capslock",
    "command": "editor.closeTypeHierarchy",
    "when": "typeHierarchyVisible && !config.editor.stablePeek"
  },
  {
    "key": "escape",
    "command": "-editor.closeTypeHierarchy",
    "when": "typeHierarchyVisible && !config.editor.stablePeek"
  },
  {
    "key": "capslock",
    "command": "editor.gotoNextSymbolFromResult.cancel",
    "when": "hasSymbols"
  },
  {
    "key": "escape",
    "command": "-editor.gotoNextSymbolFromResult.cancel",
    "when": "hasSymbols"
  },
  {
    "key": "capslock",
    "command": "editor.hideDropWidget",
    "when": "dropWidgetVisible"
  },
  {
    "key": "escape",
    "command": "-editor.hideDropWidget",
    "when": "dropWidgetVisible"
  },
  {
    "key": "capslock",
    "command": "editor.hidePasteWidget",
    "when": "pasteWidgetVisible"
  },
  {
    "key": "escape",
    "command": "-editor.hidePasteWidget",
    "when": "pasteWidgetVisible"
  },
  {
    "key": "capslock",
    "command": "filesExplorer.cancelCut",
    "when": "explorerResourceCut && filesExplorerFocus && foldersViewVisible && !inputFocus"
  },
  {
    "key": "escape",
    "command": "-filesExplorer.cancelCut",
    "when": "explorerResourceCut && filesExplorerFocus && foldersViewVisible && !inputFocus"
  },
  {
    "key": "capslock",
    "command": "gitlens.key.escape",
    "when": "editorTextFocus && gitlens:key:escape && !codeActionMenuVisible && !findWidgetVisible && !isInEmbeddedEditor && !parameterHintsVisible && !quickFixWidgetVisible && !referenceSearchVisible && !renameInputVisible && !suggestWidgetVisible"
  },
  {
    "key": "escape",
    "command": "-gitlens.key.escape",
    "when": "editorTextFocus && gitlens:key:escape && !codeActionMenuVisible && !findWidgetVisible && !isInEmbeddedEditor && !parameterHintsVisible && !quickFixWidgetVisible && !referenceSearchVisible && !renameInputVisible && !suggestWidgetVisible"
  },
  {
    "key": "backspace",
    "command": "hideCodeActionWidget",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "escape",
    "command": "-hideCodeActionWidget",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "shift+capslock",
    "command": "hideSuggestWidget",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "escape",
    "command": "-hideSuggestWidget",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "capslock",
    "command": "inlineChat.close",
    "when": "inlineChatHasProvider && inlineChatVisible"
  },
  {
    "key": "escape",
    "command": "-inlineChat.close",
    "when": "inlineChatHasProvider && inlineChatVisible"
  },
  {
    "key": "capslock",
    "command": "inlineChat.discard",
    "when": "inlineChatHasProvider && inlineChatVisible && !inlineChatUserDidEdit"
  },
  {
    "key": "escape",
    "command": "-inlineChat.discard",
    "when": "inlineChatHasProvider && inlineChatVisible && !inlineChatUserDidEdit"
  },
  {
    "key": "capslock",
    "command": "inlineChat.discardHunkChange",
    "when": "inlineChatHasProvider && inlineChatVisible && inlineChatResponseType == 'messagesAndEdits'"
  },
  {
    "key": "escape",
    "command": "-inlineChat.discardHunkChange",
    "when": "inlineChatHasProvider && inlineChatVisible && inlineChatResponseType == 'messagesAndEdits'"
  },
  {
    "key": "capslock",
    "command": "interactive.input.clear",
    "when": "!LinkedEditingInputVisible && !accessibilityHelpWidgetVisible && !breakpointWidgetVisible && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible && !exceptionWidgetVisible && !findWidgetVisible && !inSnippetMode && !isComposing && !markersNavigationVisible && !notificationToastsVisible && !parameterHintsVisible && !renameInputVisible && !selectionAnchorSet && !suggestWidgetVisible && activeEditor == 'workbench.editor.interactive'"
  },
  {
    "key": "escape",
    "command": "-interactive.input.clear",
    "when": "!LinkedEditingInputVisible && !accessibilityHelpWidgetVisible && !breakpointWidgetVisible && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible && !exceptionWidgetVisible && !findWidgetVisible && !inSnippetMode && !isComposing && !markersNavigationVisible && !notificationToastsVisible && !parameterHintsVisible && !renameInputVisible && !selectionAnchorSet && !suggestWidgetVisible && activeEditor == 'workbench.editor.interactive'"
  },
  {
    "key": "capslock",
    "command": "keybindings.editor.clearSearchResults",
    "when": "inKeybindings && inKeybindingsSearch"
  },
  {
    "key": "escape",
    "command": "-keybindings.editor.clearSearchResults",
    "when": "inKeybindings && inKeybindingsSearch"
  },
  {
    "key": "capslock",
    "command": "keybindings.editor.rejectWhenExpression",
    "when": "inKeybindings && whenFocus && !suggestWidgetVisible"
  },
  {
    "key": "escape",
    "command": "-keybindings.editor.rejectWhenExpression",
    "when": "inKeybindings && whenFocus && !suggestWidgetVisible"
  },
  {
    "key": "capslock",
    "command": "leaveEditorMessage",
    "when": "messageVisible"
  },
  {
    "key": "escape",
    "command": "-leaveEditorMessage",
    "when": "messageVisible"
  },
  {
    "key": "shift+capslock",
    "command": "leaveSnippet",
    "when": "inSnippetMode && textInputFocus"
  },
  {
    "key": "escape",
    "command": "-leaveSnippet",
    "when": "inSnippetMode && textInputFocus"
  },
  {
    "key": "capslock",
    "command": "list.clear",
    "when": "listFocus && listHasSelectionOrFocus && !inputFocus && !treestickyScrollFocused"
  },
  {
    "key": "escape",
    "command": "-list.clear",
    "when": "listFocus && listHasSelectionOrFocus && !inputFocus && !treestickyScrollFocused"
  },
  {
    "key": "capslock",
    "command": "list.closeFind",
    "when": "listFocus && treeFindOpen"
  },
  {
    "key": "escape",
    "command": "-list.closeFind",
    "when": "listFocus && treeFindOpen"
  },
  {
    "key": "capslock",
    "command": "notebook.cell.chat.acceptChanges",
    "when": "inlineChatFocused && notebookCellChatFocused && notebookChatUserDidEdit && !notebookCellEditorFocused"
  },
  {
    "key": "escape",
    "command": "-notebook.cell.chat.acceptChanges",
    "when": "inlineChatFocused && notebookCellChatFocused && notebookChatUserDidEdit && !notebookCellEditorFocused"
  },
  {
    "key": "capslock",
    "command": "notebook.cell.chat.discard",
    "when": "inlineChatFocused && notebookCellChatFocused && !notebookCellEditorFocused && !notebookChatUserDidEdit"
  },
  {
    "key": "escape",
    "command": "-notebook.cell.chat.discard",
    "when": "inlineChatFocused && notebookCellChatFocused && !notebookCellEditorFocused && !notebookChatUserDidEdit"
  },
  {
    "key": "capslock",
    "command": "notebook.hideFind",
    "when": "notebookEditorFocused && notebookFindWidgetFocused"
  },
  {
    "key": "escape",
    "command": "-notebook.hideFind",
    "when": "notebookEditorFocused && notebookFindWidgetFocused"
  },
  {
    "key": "capslock",
    "command": "notifications.hideToasts",
    "when": "notificationToastsVisible"
  },
  {
    "key": "escape",
    "command": "-notifications.hideToasts",
    "when": "notificationToastsVisible"
  },
  {
    "key": "capslock",
    "command": "notifications.hideToasts",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "key": "escape",
    "command": "-notifications.hideToasts",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "key": "capslock",
    "command": "problems.action.clearFilterText",
    "when": "problemsFilterFocus"
  },
  {
    "key": "escape",
    "command": "-problems.action.clearFilterText",
    "when": "problemsFilterFocus"
  },
  {
    "key": "shift+capslock",
    "command": "removeSecondaryCursors",
    "when": "editorHasMultipleSelections && textInputFocus"
  },
  {
    "key": "escape",
    "command": "-removeSecondaryCursors",
    "when": "editorHasMultipleSelections && textInputFocus"
  },
  {
    "key": "capslock",
    "command": "scm.clearInput",
    "when": "scmRepository && !suggestWidgetVisible"
  },
  {
    "key": "escape",
    "command": "-scm.clearInput",
    "when": "scmRepository && !suggestWidgetVisible"
  },
  {
    "key": "capslock",
    "command": "workbench.action.chat.stopReadChatItemAloud",
    "when": "scopedChatSynthesisInProgress"
  },
  {
    "key": "escape",
    "command": "-workbench.action.chat.stopReadChatItemAloud",
    "when": "scopedChatSynthesisInProgress"
  },
  {
    "key": "shift+capslock",
    "command": "workbench.action.closeQuickOpen",
    "when": "inQuickOpen"
  },
  {
    "key": "escape",
    "command": "-workbench.action.closeQuickOpen",
    "when": "inQuickOpen"
  },
  {
    "key": "shift+capslock",
    "command": "workbench.action.hideComment",
    "when": "commentEditorFocused"
  },
  {
    "key": "escape",
    "command": "-workbench.action.hideComment",
    "when": "commentEditorFocused"
  },
  {
    "key": "capslock",
    "command": "workbench.action.terminal.hideSuggestWidget",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
  },
  {
    "key": "escape",
    "command": "-workbench.action.terminal.hideSuggestWidget",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
  },
  {
    "key": "capslock",
    "command": "workbench.banner.focusBanner",
    "when": "bannerFocused"
  },
  {
    "key": "escape",
    "command": "-workbench.banner.focusBanner",
    "when": "bannerFocused"
  },
  {
    "key": "capslock",
    "command": "workbench.statusBar.clearFocus",
    "when": "statusBarFocused"
  },
  {
    "key": "escape",
    "command": "-workbench.statusBar.clearFocus",
    "when": "statusBarFocused"
  },
  {
    "key": "shift+escape",
    "command": "-hideCodeActionWidget",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "shift+escape",
    "command": "-hideSuggestWidget",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "shift+escape",
    "command": "-leaveSnippet",
    "when": "inSnippetMode && textInputFocus"
  },
  {
    "key": "shift+escape",
    "command": "-removeSecondaryCursors",
    "when": "editorHasMultipleSelections && textInputFocus"
  },
  {
    "key": "ctrl+capslock",
    "command": "workbench.action.chat.cancel"
  },
  {
    "key": "ctrl+escape",
    "command": "-workbench.action.chat.cancel"
  },
  {
    "key": "shift+escape",
    "command": "-workbench.action.closeQuickOpen",
    "when": "inQuickOpen"
  },
  {
    "key": "capslock",
    "command": "workbench.action.exitZenMode",
    "when": "inZenMode"
  },
  {
    "key": "escape escape",
    "command": "-workbench.action.exitZenMode",
    "when": "inZenMode"
  },
  {
    "key": "shift+escape",
    "command": "-workbench.action.hideComment",
    "when": "commentEditorFocused"
  }
]
