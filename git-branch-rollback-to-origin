#!/bin/bash

function ask_continue { action_name=$1
  if [[ -z "${action_name}" ]]; then
    action_name="continue"
  fi

  # -s	        do not echo input coming from a terminal
  # -p          prompt	output the string PROMPT without a trailing newline before
  #       attempting to read
  # -r  	  	  do not allow backslashes to escape any characters
  # -n nchars	  return after reading NCHARS characters rather than waiting
  #    		for a newline,
  read -n 1 -r -p "(Press \"y\" to ${action_name}): " input

  # new line but with stderr, escaping capture output
  echo >&2

  if [ "$input" != "Y" ] && [ "$input" != "y" ] && [ "$input" != "ะด" ] && [ "$input" != "ะ" ]; then
    exit
  fi
  echo 1
}

BRANCH="$1"

if [[ -z "$BRANCH" ]]; then
  BRANCH="master"
fi

echo -e "# Current commit at $BRANCH:\n"
git log -n 1 $BRANCH
echo

echo -e "# Commit at origin/$BRANCH:\n"
git log -n 1 origin/$BRANCH
echo

ASK_RESULT=$(ask_continue "roll back \"$BRANCH\" branch to \"$BRANCH\"/origin and LOSE CHANGES")

if [[ "$ASK_RESULT" != "1" ]]; then
  exit
fi

set -x
git checkout origin/$BRANCH &> /dev/null
git branch -f $BRANCH
git checkout $BRANCH
