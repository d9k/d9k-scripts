#!/bin/bash

REPO_TYPE=$(get-repo-type)

#Black        0;30     Dark Gray     1;30
#Red          0;31     Light Red     1;31
#Green        0;32     Light Green   1;32
#Brown/Orange 0;33     Yellow        1;33
#Blue         0;34     Light Blue    1;34
#Purple       0;35     Light Purple  1;35
#Cyan         0;36     Light Cyan    1;36
#Light Gray   0;37     White         1;37

RED_TEXT='\033[0;31m'
LIGHT_GRAY_TEXT='\033[0;37m'
YELLOW_TEXT='\033[1;33m'
ORANGE_TEXT='\033[0;33m'
NO_COLOR='\033[0m' # No Color

printf "I ${RED}love${NO_COLOR} Stack Overflow\n"

function ask_continue {
  CONTINUE=
  # -s	        do not echo input coming from a terminal
  # -p          prompt	output the string PROMPT without a trailing newline before
  #       attempting to read
  # -r  	  	  do not allow backslashes to escape any characters
  # -n nchars	  return after reading NCHARS characters rather than waiting
  #    		for a newline,
  read -n 1 -r -p "Press \"y\" key to continue: " input

  # new line but with stderr, escaping capture output
  echo >&2

  if [ "$input" != "Y" ] && [ "$input" != "y" ]; then
    exit
  fi
  echo 1
}

function header { header_text=$1;
  echo -e "\n\n${LIGHT_GRAY_TEXT}# ${header_text}:${NO_COLOR}\n"
}

if [[ -z "$REPO_TYPE" ]]; then
  echo "Repo not detected"
  exit
fi

echo "$REPO_TYPE repo detected"

if [ "$REPO_TYPE" == "git" ]; then

  header "Staged files"

  printf "${ORANGE_TEXT}"

  git diff --name-only --cached

  printf "${NO_COLOR}"

  header "This commit will be edited"

  git log -1 --abbrev-commit --pretty=format:'%C(dim white)#%h    %d%C(reset)%n%C(green)%cr%C(reset)%n%n%s%n%n%C(blue)/%an%C(reset)'
  if [[ "$(ask_continue)" != "1" ]]; then
    exit;
  fi
  git commit --amend
  exit
fi

if [ "$REPO_TYPE" == "hg" ]; then
  hg commit --amend
  exit
fi
